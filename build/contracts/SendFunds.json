{
  "contractName": "SendFunds",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "sendTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SendFunds.sol\":\"SendFunds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/SendFunds.sol\":{\"keccak256\":\"0x375e32568053e80c819349b5688b37218e357a71e4e838c6b3b8683777bf2451\",\"urls\":[\"bzz-raw://2e10f06bf0981a701991d306c7d23fe50d28eebd71d0818e6c9716414d6aad69\",\"dweb:/ipfs/Qme41eSL6fLdKJagWFFpHkfE5meZeMfwtCa9vt3TAZYBak\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe608060405260043610601c5760003560e01c8063e6d25245146021575b600080fd5b6030602c366004606a565b6032565b005b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156066573d6000803e3d6000fd5b5050565b600060208284031215607b57600080fd5b81356001600160a01b0381168114609157600080fd5b939250505056fea2646970667358221220a9a376f7243195d9a8e65a0bed1c9f5088ab0dc38bffe3161beafa46c0c375b164736f6c63430008070033",
  "deployedBytecode": "0x608060405260043610601c5760003560e01c8063e6d25245146021575b600080fd5b6030602c366004606a565b6032565b005b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156066573d6000803e3d6000fd5b5050565b600060208284031215607b57600080fd5b81356001600160a01b0381168114609157600080fd5b939250505056fea2646970667358221220a9a376f7243195d9a8e65a0bed1c9f5088ab0dc38bffe3161beafa46c0c375b164736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:310:2",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:2",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:216:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:2"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:36:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "189:9:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "176:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:23:2"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:2",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "262:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "271:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "274:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "264:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "264:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "264:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "221:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "232:5:2"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "247:3:2",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:1:2",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "243:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "243:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "256:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "239:19:2"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "228:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "228:31:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "218:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "218:42:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "211:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "211:50:2"
                  },
                  "nodeType": "YulIf",
                  "src": "208:70:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "287:15:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "297:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "287:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:2",
                "type": ""
              }
            ],
            "src": "14:294:2"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "27:125:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "27:125:1:-:0;;;;;;;;;;;;;;;;;;;;;53:96;;;;;;:::i;:::-;;:::i;:::-;;;118:23;;-1:-1:-1;;;;;118:12:1;;;131:9;118:23;;;;;;;;;131:9;118:12;:23;;;;;;;;;;;;;;;;;;;;;53:96;:::o;14:294:2:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;176:23;;-1:-1:-1;;;;;228:31:2;;218:42;;208:70;;274:1;271;264:12;208:70;297:5;14:294;-1:-1:-1;;;14:294:2:o",
  "source": "pragma solidity ^0.8.7;\r\n\r\ncontract SendFunds {\r\n    function sendTo(address payable _to) external payable {\r\n        _to.transfer(msg.value);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\om prabhu\\Desktop\\project\\contracts\\SendFunds.sol",
  "ast": {
    "absolutePath": "project:/contracts/SendFunds.sol",
    "exportedSymbols": {
      "SendFunds": [
        73
      ]
    },
    "id": 74,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 73,
        "linearizedBaseContracts": [
          73
        ],
        "name": "SendFunds",
        "nameLocation": "36:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "107:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "131:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "131:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "118:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "118:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "118:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "118:23:1"
                }
              ]
            },
            "functionSelector": "e6d25245",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendTo",
            "nameLocation": "62:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "85:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "69:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "69:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "68:21:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "107:0:1"
            },
            "scope": 73,
            "src": "53:96:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 74,
        "src": "27:125:1",
        "usedErrors": []
      }
    ],
    "src": "0:152:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x49b6E8bc98708D5a56B6aC054423C8535d70ba4A",
      "transactionHash": "0xc7ef57d6889da232e381958b66e75076b467c62264f40fcdcc203a777502df17"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-26T19:36:08.031Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}